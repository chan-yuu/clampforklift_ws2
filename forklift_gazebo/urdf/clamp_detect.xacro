<?xml version="1.0"?>
<!-- robot的name -->
<robot name="forklift"  xmlns:xacro="http://ros.org/wiki/xacro">
    
    <!-- 导入gazebo的插件来控制gazebo中的叉头升降 -->
    <gazebo>
        <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
            <robotNamespace>/</robotNamespace>
            <robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType>
        </plugin>
    </gazebo>

    <!-- <xacro:arg name="robot_namespace" default="/" />  -->

    <!-- 属性封装 -->
    <xacro:property name="M_PI" value="3.14159"/>

    <!-- 主要用于gazebo中的碰撞监测 -->
    <xacro:property name="base_x_size" value="0.9250000" />
    <xacro:property name="base_y_size" value="0.380000" />
    <xacro:property name="base_z_size" value="0.210000" />

    <!-- 轴距 （左右）车轮间距 前后车轮的垂直误差 -->
    <xacro:property name="wheelbase" value="1.5" />
    <xacro:property name="track" value="0.8" />
    <xacro:property name="wheel_vertical_offset" value="-0.0702" />

    <xacro:property name="support_length" value="4.0" />

    <xacro:property name="wheel_length" value="1.1653e-01" />
    <xacro:property name="wheel_radius" value="1.6459e-01" />

    <xacro:arg name="gpu" default="true"/>
    <xacro:property name="gpu" value="$(arg gpu)" />
    <xacro:arg name="organize_cloud" default="true"/>
    <xacro:property name="organize_cloud" value="$(arg organize_cloud)" />
    
    <material name="black">
        <color rgba="0.0 0.0 0.0 1.0" />
    </material>
    
    <!-- 自定义材质 -->
    <material name="CustomGrey">
        <color rgba="0.3 0.3 0.2 1"/>
        <ambient>0.2 0.2 0.2 1</ambient>
        <diffuse>0.5 0.5 0.5 1</diffuse>
        <specular>0.1 0.1 0.1 1</specular>
        <emissive>0.0 0.0 0.0 1</emissive>
    </material>
    <material name="CustomDarkGrey">
        <color rgba="0.3 0.3 0.3 1"/>
        <ambient>0.1 0.1 0.1 1</ambient>
        <diffuse>0.3 0.3 0.3 1</diffuse>
        <specular>0.1 0.1 0.1 1</specular>
        <emissive>0.0 0.0 0.0 1</emissive>
    </material>

    <!-- 底盘的轮子 -->
    <!-- <xacro:include filename="$(find forklift_gazebo)/urdf/scout_wheel_type1.xacro" /> -->
    <!-- <xacro:include filename="$(find forklift_gazebo)/urdf/scout_wheel_type2.xacro" /> -->
    <xacro:include filename="$(find forklift_gazebo)/urdf/inertial.xacro" />

    <!-- D435i RGB-D相机相关 -->
    <xacro:include filename="$(find realsense_ros_gazebo)/xacro/depthcam.xacro"/>
    <xacro:realsense_d435 sensor_name="camera" parent_link="base_link" rate="30.0">
    <origin rpy="0 0 0" xyz="1.2 0 0.25"/>
    </xacro:realsense_d435>
    

    <!-- support是雷达支架，链接的也是这个xacro  -->
    <!-- VLP16 激光雷达 -->
    <!-- <xacro:include filename="$(find forklift_gazebo)/urdf/laser_support.xacro" />
    <xacro:include filename="$(find velodyne_description)/urdf/VLP-16.urdf.xacro"/>
    <xacro:VLP-16 parent="support" name="velodyne" topic="/velodyne_points" organize_cloud="${organize_cloud}" hz="10" samples="440" gpu="${gpu}">
          <origin xyz="0 0 1.5" rpy="0 0 0" />
    </xacro:VLP-16> -->

    <!-- 如果使用32线的lidar -->
    <!-- 32线雷达 -->
    <xacro:include filename="$(find forklift_gazebo)/urdf/laser_support.xacro" />
	<xacro:include filename="$(find velodyne_description)/urdf/HDL-32E.urdf.xacro"/>
  	<xacro:HDL-32E parent="support" name="velodyne" topic="/velodyne_points" organize_cloud="${organize_cloud}" hz="10" samples="2178" gpu="${gpu}">
    		<origin xyz="0 0 1.5" rpy="0 0 0" />
  	</xacro:HDL-32E>

    <!-- 128线雷达用于检测 -->
    <!-- <xacro:include filename="$(find forklift_gazebo)/urdf/laser_support_detect.xacro" /> -->
	<xacro:include filename="$(find velodyne_description)/urdf/HDL-32E.urdf_detect.xacro"/>
    <xacro:HDL-128E parent="base_link" name="velodyne128" topic="/velodyne_points_128" organize_cloud="true" hz="10" lasers="128" samples="2187" noise="0.008" min_angle="-1.57" max_angle="1.57" gpu="${gpu}">
        <origin xyz="1.3 0 0" rpy="0 0 0"/>
    </xacro:HDL-128E>

    <!-- 如果是二维的scan -->

    <!-- IMU 模块 -->
    <xacro:include filename="$(find forklift_gazebo)/urdf/imu.xacro"/>
    <xacro:imu sensor_name="imu" parent_link="base_link">
    <origin rpy="0 0 0" xyz="-0.03 0 ${base_z_size/2}"/>
    </xacro:imu>

    <gazebo>
        <plugin name="object_controller" filename="libgazebo_ros_planar_move.so">
            <publishOdometryTf>true</publishOdometryTf>
            <commandTopic>cmd_vel</commandTopic>
            <odometryTopic>odom</odometryTopic>
            <odometryFrame>odom</odometryFrame>
            <odometryRate>10.0</odometryRate>
            <robotBaseFrame>base_footprint</robotBaseFrame>
            <cmdTimeout>1.0</cmdTimeout> <!-- 添加这一行，设置超时时间为1秒 -->
        </plugin>
    </gazebo>

    <!-- Base link  底盘 -->
    <link name='base_link'>
        <inertial>
            <mass value="1"/>
            <inertia ixx="0.16" ixy="0" ixz="0" iyy="0.16" iyz="0" izz="0.16"/>
        </inertial>
        <visual name='visual'>
            <origin xyz="0.0 -0.0 0.0" rpy="0 0 0" />
            <geometry>
                <!-- <mesh filename="package://forklift_gazebo/meshes/fork_base_link.dae"/> -->
                <mesh filename="package://forklift_gazebo/meshes/clamp/f2_model.stl"/>
            </geometry>
            <material name="CustomGrey"/>
        </visual>
        <collision name='collision'>
            <geometry>
                <box size="2.6 1.13 1.538"/>
                <!-- <mesh filename="package://forklift_gazebo/meshes/new/last_main.stl"/> -->
            </geometry>
        </collision>
    </link>

    <!-- <gazebo reference="base_link"> -->
        <!-- 与rviz不同（3）：重新设置颜色 -->
        <!-- <material>Gazebo/RedGlow</material> -->
    <!-- </gazebo> -->

    <!-- <gazebo reference="base_link">
        <material>
            <script>
                <uri>package://forklift_gazebo/materials/scripts/gazebo.material</uri>
                <name>Custom/RedGlow</name>
            </script>
            <texture>
                <diffuse>package://forklift_gazebo/materials/textures/Travertine003.png</diffuse>
            </texture>
        </material>
    </gazebo> -->

    <gazebo reference="base_link">
        <material>Custom/CustomTexture</material>
    </gazebo>


    <!-- 左右的fork -->
    <link name='fork_left'>
        <inertial>
            <mass value="0.1"/>
            <origin xyz="0 0 0"/>
            <inertia ixx="0.1" ixy="0" ixz="0" iyy="0.1" iyz="0" izz="0.1"/>
        </inertial>
        <visual name='visual'>
            <origin xyz="0 0 0" rpy="0 0 0" />
            <!-- <origin xyz="2.0 0.25 -0.35" rpy="0 0 0" /> -->
            <geometry>
                <!-- <box size="1 0.043 0.35"/> -->
                <!-- <box size="1.21 0.121 0.1"/> -->
                <mesh filename="package://forklift_gazebo/meshes/clamp/jia_left.stl"/>
            </geometry>
            <!-- <material name="CustomGrey"/> -->
        </visual>
        <collision name='collision'>
            <geometry>
                <box size="1 0.043 0.35"/>
                <!-- <mesh filename="package://forklift_gazebo/meshes/new/fork_last.dae"/> -->
            </geometry>
        </collision>
    </link>

    <link name='fork_right'>
        <inertial>
            <mass value="0.1"/>
            <origin xyz="0 0 0"/>
            <inertia ixx="0.1" ixy="0" ixz="0" iyy="0.1" iyz="0" izz="0.1"/>
        </inertial>
        <visual name='visual'>
            <origin xyz="0.0 -0.0 -0.0" rpy="0 0 0" />
            <origin xyz="0 0 0" rpy="0 0 0" />
            <geometry>
                <!-- <box size="1 0.043 0.35"/> -->
                <!-- <box size="1.21 0.121 0.1"/> -->
                <mesh filename="package://forklift_gazebo/meshes/clamp/jia_right.stl"/>
            </geometry>
            <!-- <material name="CustomGrey"/> -->
        </visual>
        <collision name='collision'>
            <geometry>
                <box size="1 0.043 0.35"/>
                <!-- <box size="1.22 0.121 0.043"/> -->
                <!-- <mesh filename="package://forklift_gazebo/meshes/new/fork_last.dae"/> -->
            </geometry>
        </collision>
    </link>

    <gazebo reference="fork_left">
        <material>Gazebo/DarkGrey</material>
    </gazebo>

    <gazebo reference="fork_right">
        <material>Gazebo/DarkGrey</material>
    </gazebo>


    <link name="fork_left_horizontal">
        <visual>
        <geometry>
            <box size="0.001 0.005 0.001"/>
        </geometry>
        </visual>
        <inertial>
            <mass value="0.1"/>
            <origin xyz="0 0 0"/>
            <inertia ixx="0.1" ixy="0" ixz="0" iyy="0.1" iyz="0" izz="0.1"/>
        </inertial>
    </link>

    <!-- 左叉水平平移关节 -->
    <joint name="base_link_to_fork_left_horizontal" type="prismatic">
        <parent link="base_link"/>
        <child link="fork_left_horizontal"/>
        <limit lower="-0.10" upper="0.60" velocity="0.5" effort="4000"/>
        <axis xyz="0 1 0"/>
        <origin xyz="1.8 0.25 0" rpy="0 0 0"/>
    </joint>
    <!-- 左叉垂直平移关节 -->
    <joint name="fork_left_horizontal_to_fork_left_vertical" type="prismatic">
        <parent link="fork_left_horizontal"/>
        <child link="fork_left"/>
        <limit lower="-1.0" upper="3.5" velocity="0.5" effort="4000"/>
        <axis xyz="0 0 1"/>
        <origin xyz="0 0 0" rpy="0 0 0"/>
    </joint>


    <link name="fork_right_horizontal">
        <visual>
        <geometry>
            <box size="0.001 0.005 0.001"/>
        </geometry>
        </visual>
        <inertial>
            <mass value="0.1"/>
            <origin xyz="0 0 0"/>
            <inertia ixx="0.1" ixy="0" ixz="0" iyy="0.1" iyz="0" izz="0.1"/>
        </inertial>
    </link>
    <!-- 右叉水平平移关节 -->
    <joint name="base_link_to_fork_right_horizontal" type="prismatic">
        <parent link="base_link"/>
        <child link="fork_right_horizontal"/>
        <limit lower="-0.60" upper="0.1" velocity="0.5" effort="4000"/>
        <axis xyz="0 1 0"/>
        <origin xyz="1.8 -0.25 0" rpy="0 0 0"/>
    </joint>
    <!-- 右叉垂直平移关节 -->
    <joint name="fork_right_horizontal_to_fork_right_vertical" type="prismatic">
        <parent link="fork_right_horizontal"/>
        <child link="fork_right"/>
        <limit lower="-1.0" upper="3.5" velocity="0.5" effort="4000"/>
        <axis xyz="0 0 1"/>
        <origin xyz="0 0 0" rpy="0 0 0"/>
    </joint>

  <!-- 传动装置配置 -->
  <!-- 左叉水平传动 -->
  <transmission name="base_link_to_fork_left_horizontal_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="base_link_to_fork_left_horizontal">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
    <actuator name="base_link_to_fork_left_horizontal_motor">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>

  <!-- 左叉垂直传动 -->
  <transmission name="fork_left_horizontal_to_fork_left_vertical_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="fork_left_horizontal_to_fork_left_vertical">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
    <actuator name="fork_left_vertical_motor">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>

  <!-- 右叉水平传动 -->
  <transmission name="base_link_to_fork_right_horizontal_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="base_link_to_fork_right_horizontal">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
    <actuator name="base_link_to_fork_right_horizontal_motor">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>

  <!-- 右叉垂直传动 -->
  <transmission name="fork_right_horizontal_to_fork_right_vertical_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="fork_right_horizontal_to_fork_right_vertical">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
    <actuator name="fork_right_vertical_motor">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>


    <link name="base_footprint"/>
    <joint name="base_joint" type="fixed">
        <origin xyz="0 0 0" rpy="0 0 0" />
        <parent link="base_footprint" />
        <child link="base_link" />
    </joint>

    <link name="inertial_link">
        <inertial>
            <mass value="40" />
            <origin xyz="0.0 0.0 0.0" />
            <inertia ixx="2.288641" ixy="0" ixz="0" iyy="5.103976" iyz="0" izz="3.431465" />
        </inertial>
    </link>
    <joint name="inertial_joint" type="fixed">
        <origin xyz="0 0 0" rpy="0 0 0" />
        <parent link="base_link" />
        <child link="inertial_link" />
    </joint>

</robot>
